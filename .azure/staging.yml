trigger:
  - staging

resources:
  - repo: self

variables:
  dockerRegistryServiceConnection: '0084ee1e-f5cb-45da-a945-ea3e1d1502a4'
  imageRepository: 'backendscala'
  containerRegistry: 'blindnet.azurecr.io'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - script: |
              echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | sudo tee /etc/apt/sources.list.d/sbt.list
              echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | sudo tee /etc/apt/sources.list.d/sbt_old.list
              curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo apt-key add
              sudo dpkg -i repo-deb-build-0002.deb
              sudo apt-get update
              sudo apt-get install -y sbt
            displayName: Install SBT
          - script: |
              git clone https://github.com/circe/circe.git
              cd circe
              git checkout ca4e8425d04f100c481954429b9ba30b24d05967
              sbt ++3.1.0 publishLocal
            displayName: Build circe
          - script: sbt assembly
            displayName: Assembly
          - task: Docker@2
            displayName: Build Docker image
            inputs:
              command: build
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: $(tag)
              arguments: '--build-arg BN_ENV=staging'
          - task: Docker@2
            displayName: Push Docker Image
            inputs:
              command: push
              repository: $(imageRepository)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: $(tag)
